<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="g_member">
	
	<!-- 아이디 중복체크 -->
	<select id="checkId" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT G_ID FROM GENERAL_MEMBER WHERE G_ID = #{paramId}
	</select>
	
	<!-- 회원가입 -->
	<insert id="insertUserData" parameterType="vo.G_MemberVO">
		INSERT INTO GENERAL_MEMBER VALUES ( seq_g.nextVal, #{g_id}, #{g_pwd}, #{g_phone}, #{g_wallet}, #{master} )
	</insert>
	
	<!-- 회원정보가 있는지 조회 -->	
	<select id="searchUserData" parameterType="java.util.Map" resultType="java.lang.String">	
		SELECT G_ID, G_PWD FROM GENERAL_MEMBER WHERE G_ID = #{id} AND G_PWD = #{pwd}
	</select>
	
	<!-- 회원정보가 있으면 모든 회원정보 가져오기 -->	
	<select id="getUserData" parameterType="java.lang.String" resultType="vo.G_MemberVO">	
		SELECT * FROM GENERAL_MEMBER WHERE G_ID = #{id}
	</select>
	
	<!-- 회원정보수정 -->
	<update id="updateUserData" parameterType="vo.G_MemberVO">
		UPDATE GENERAL_MEMBER SET G_PHONE = #{g_phone} WHERE G_ID = #{g_id}
	</update>
	
	<!-- 비밀번호수정 -->
	<update id="updateUserPwd" parameterType="vo.G_MemberVO">
		UPDATE GENERAL_MEMBER SET G_PWD = #{g_pwd} WHERE G_ID = #{g_id}
	</update>
	
	<!-- 비밀번호찾기 -->
	<select id="searchUserPwd" parameterType="java.util.Map" resultType="java.lang.String">
		SELECT G_PWD FROM GENERAL_MEMBER WHERE G_ID = #{id} AND G_PHONE = #{phonenumber}
	</select>
	
	<!-- 회원탈퇴 -->
	<delete id="deleteUserData" parameterType="java.lang.String">
		DELETE FROM GENERAL_MEMBER WHERE G_ID = #{id}
	</delete>
	
	<!-- 탈퇴한 회원 연령대와 사유 저장 -->
	<insert id="insertLeavingReason" parameterType="java.util.Map">
		INSERT INTO LEAVING_MEMBER VALUES ( seq_l.nextVal, #{ages}, #{reason}, sysdate, #{id} )
	</insert>
	
	<!-- 물건 판매체결되면 일반회원 돈받음 -->
	<update id="getMoney" parameterType="java.util.Map">
		UPDATE GENERAL_MEMBER SET G_WALLET = G_WALLET + CAST(#{completionprice} AS INT) where g_id = CAST(#{g_id} AS VARCHAR(20))
	</update>
	
</mapper>



































